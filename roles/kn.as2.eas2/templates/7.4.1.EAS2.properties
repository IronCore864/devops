#
# Settings for e-AS2
#

{% if eas2_cluster_address is defined and connection_http_port is defined %}
{% if eas2_cluster_mode is defined and eas2_cluster_mode == "config" %}
# Config instance does not contain settings for connection.http

{% else %}
# your hostname and port / POST request URI for HTTP connection
connection.http.host = {{ eas2_cluster_address }}
connection.http.port = {{ connection_http_port }}
connection.http.uri = /as2in

{% endif %}
{% endif %}
{% if connection_config_port is defined %} 
{% if eas2_cluster_mode is defined and eas2_cluster_mode == "processing" %}
# Processing instance does not contain settings for connection.config

{% else %}
# settings for configuration connection
connection.config.host = localhost
connection.config.port = {{ connection_config_port }}
connection.config.password = passwort

{% endif %}
{% endif %}
{% if connection_healthcheck_port is defined and EAS2_VERSION != "7.0.2" %}
{% if eas2_cluster_mode is defined and eas2_cluster_mode == "config" %}
# Config instance does not contain settings for connection.healthcheck

{% else %}
# additional setting for Cluster Edition (optional)
connection.healthcheck.port = {{ connection_healthcheck_port }}

{% endif %}
{% endif %}
{% if connection_https_port is defined and connection_https_cert is defined %}
# Additional settings for HTTP/S
connection.https.port = {{ connection_https_port }}
connection.https.cert = {{ connection_https_cert }}
connection.https.clientauth = 0

{% endif %}
{% if connection_https_port2 is defined and connection_https_cert2 is defined %}
# Additional Settings for another HTTP/S thread (optional)
connection.https.port.2 = {{ connection_https_port2 }}
connection.https.cert.2 = {{ connection_https_cert2 }}
connection.https.clientauth.2 = 0

{% endif %}
{% if connection_https_port3 is defined and connection_https_cert3 is defined %}
# Additional Settings for another HTTP/S thread (optional)
connection.https.port.3 = {{ connection_https_port3 }}
connection.https.cert.3 = {{ connection_https_cert3 }}
connection.https.clientauth.3 = 0

{% endif %}
{% if connection_https_port4 is defined and connection_https_cert4 is defined %}
# Additional Settings for another HTTP/S thread (optional)
connection.https.port.4 = {{ connection_https_port4 }}
connection.https.cert.4 = {{ connection_https_cert4 }}
connection.https.clientauth.4 = 0

{% endif %}
# Additional settings for pure HTTP file upload (w/o AS2)
http.upload.allow = 1
http.upload.sslonly = 1
http.upload.uribase = /upload

# connect timeout (in seconds)
tcpip.connect.timeout = {{ tcpip_connect_timeout }}
smtp.connect.timeout = {{ smtp_connect_timeout }}

# read timeout for communication (in seconds)
tcpip.read.timeout = {{ tcpip_read_timeout }}
smtp.read.timeout = {{ smtp_read_timeout }}

# wait timeout for async MDN (in minutes, default: infinite)
async.mdn.wait.timeout = {{ async_mdn_wait_timeout }}

{% if mail_host is defined and mail_to is defined and mail_from is defined %}
# mail configuration (for operator mails and EDI mails)
mail.host = {{ mail_host }}

# mail receipient (set this one, too, to activate operator mails)
mail.to = {{ mail_to }}

# mail sender (optional, default: mail address of OS user)
mail.from = {{ mail_from }}

{% endif %}
# AS2 cryptography defaults
as2.encryption.cipher = DES-EDE3-CBC
as2.signature.algorithm = SHA1withRSA

# Warning threshold for expiring certificates (in days)
certificate.validity.threshold = 30
certificate.validity.threshold.2 = 15

# Root of primary interface directory tree
interface.root.primary = {{ interface_root_primary }}

{% if interface_root_secondary is defined %}
# Root of secondary interface directory tree (only for Enterprise version)
interface.root.secondary = {{ interface_root_secondary }}

{% endif %}
# controlling the input interface / directory based (0) or RES file based (1)
# (only for Enterprise version - Connect version is always directory based),
# encoding
interface.in.res-file = 1

# controlling the output interface / INF or directory, encoding
interface.out.directory = 1
interface.out.inf-file = 0

# Wait timeout for command execution (in seconds). If the command is still
# running then it will be stopped. Processing will be signalled as erronous.
command.wait.timeout = 20

# Parameters for clean-up routines (age in days)
dispose.queue.age.max = {{ dispose_queue_age_max }}
dispose.queue.count.max = {{ dispose_queue_count_max }}
dispose.files.age.max = {{ dispose_files_age_max }}

# Check for low memory (in percent of total memory)
low.memory.warning.threshold = 10
low.memory.shutdown.threshold = 5

# Language (de or deu for german, en or eng for english)
eas2.language = en

# Instance name for this e-AS2 server
eas2.instance.name = {{ eas2_instance_name }}

{% if eas2_cluster_mode is defined %}
# Cluster Edition Node Type
# Set by installer. DO NOT CHANGE!
# This setting is irrelevant for Enterprise and Connect.
ce.node.type = {{ eas2_cluster_mode }}

{% endif %}
################################
# KN additional configurations #
################################

certificate.validity.warning.repeat = 120

emergency.timeout = 300

errorhandling.reply.http.retry = 1

gui.policy.command.on.receive.checked = 1

limit.incoming.as2 = {{ limit_incoming_as2 }}
limit.outgoing.running = {{ limit_outgoing_running }}
limit.outgoing.transferring = {{ limit_outgoing_transferring }}
limit.outgoing.perpartner = {{ limit_outgoing_perpartner }}
limit.reached.mail.repeat = {{ limit_reached_mail_repeat }}

{% if eas2_cluster_mode is defined %}
{% if eas2_cluster_mode == "processing" and eas2_cluster_address is defined %}
# Create message IDs for asynchronous MDN
# Default: 1
async.mdn.create.message.id = 1

# Timeout for async MDN for direct client or GUI (in seconds, default: 15)
client.direct.mdn.async.wait = {{ client_direct_mdn_async_wait }}
message.id.address = {{ eas2_cluster_address }}
message.id.hostname = {{ message_id_hostname }}
{% endif %}
{% endif %}

{% if db_password is defined and db_host is defined and db_name is defined and db_user is defined %}
# Database connection
database.jdbc.driver = com.mysql.jdbc.Driver
database.password = {{ db_password }}
database.url = jdbc:mysql://{{ db_host }}:3306/{{ db_name }}
database.user = {{ db_user }}

# DB Logging enabled
logging.db = 1
logging.db.age.max = 1
{% endif %}
