---
- name: Download installation file to e-AS2 server host
  get_url:
    url: "http://dehamsl1806.int.kn/ansible/artifacts/eas2/{{ EAS2_INST_FILE }}"
    dest: "{{ HOME_DIR }}/{{ EAS2_INST_FILE }}"
    mode: "{{ FILE_MODE_EXECUTE }}"
    owner: "{{ FILE_OWNER }}"
    group: "{{ FILE_GROUP }}"
    use_proxy: no

- name: Copy installation var file to e-AS2 server host
  copy:
    src: "{{ INST_VARFILE }}.{{ eas2_db_mode }}"
    dest: "{{ HOME_DIR }}/{{ INST_VARFILE }}"
    owner: "{{ FILE_OWNER }}"
    group: "{{ FILE_GROUP }}"
    mode: "{{ FILE_MODE_EXECUTE }}"
  changed_when: false

- name: Install new e-AS2 server
  become_user: eas2
  shell: "{{ INSTALL_EAS2 }}"
  changed_when: false

- name: Copy e-AS2 server license file
  copy:
    src: "{{ INST_LICENSE }}.{{ eas2_mode }}"
    dest: "{{ inst_dir }}/{{ INST_LICENSE }}"
    owner: "{{ FILE_OWNER }}"
    group: "{{ FILE_GROUP }}"
    mode: "{{ FILE_MODE_READ }}"
  changed_when: false

- name: Create interface directory
  file: 
    path: "{{ interface_root_primary }}"
    state: "directory"
    mode: "{{ FILE_MODE_EXECUTE_READ }}"
    owner: "{{ FILE_OWNER }}"
    group: "{{ FILE_GROUP }}"

- name: Create interface2 directory
  file: 
    path: "{{ interface_root_secondary }}"
    state: "directory"
    mode: "{{ FILE_MODE_EXECUTE_READ }}"
    owner: "{{ FILE_OWNER }}"
    group: "{{ FILE_GROUP }}"
  when: interface_root_secondary is defined

- name: Remove installation files
  file:
    path: "{{ HOME_DIR }}/{{ item }}"
    state: "absent"
  with_items:
    - "{{ EAS2_INST_FILE }}"
    - "{{ INST_VARFILE }}"
  changed_when: false

- name: Remove eas2 crontab job
  cron:
    name: "{{ cron_name }}"
    user: "eas2"
    minute: "{{ cron_minute }}" 
    state: absent
    job: "{{ cron_job }}"

- name: Stop e-AS2 server
  become_user: eas2
  shell: "{{ stop_eas2 }}"
  ignore_errors: yes

- name: Create symlink to e-AS2 server installation directory
  file:
    src: "e-AS2.{{ EAS2_VERSION }}"
    dest: "{{ HOME_DIR }}/e-AS2"
    force: "yes"
    owner: "{{ FILE_OWNER }}"
    group: "{{ FILE_GROUP }}"
    state: "link"
