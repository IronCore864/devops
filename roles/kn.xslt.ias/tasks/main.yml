---
- name: check if ias folder exists or not
  stat:
    path: /home/edi/mlib/xslt/extensions/KNIB-Lib-XsltExtension-IAS
  register: ret

- name: create ias extension folder if it does not exist
  file:
    path: /home/edi/mlib/xslt/extensions/KNIB-Lib-XsltExtension-IAS
    state: directory
    owner: edi
    group: edi
    mode: 0777
  when: ret.stat.exists == False

- name: get ias jar file and unarchive
  unarchive:
    src: "{{ installer }}"
    remote_src: yes
    dest: /home/edi/mlib/xslt/extensions/KNIB-Lib-XsltExtension-IAS/
    owner: edi
    group: edi
    mode: 0644
  register: jar

- name: check if extension path is in wrapper conf
  shell: "grep KNIB-Lib-XsltExtension-IAS /home/edi/bin/EDI_XSLTS/wrapper.conf"
  ignore_errors: yes
  register: grep

- name: get largest class path number
  shell: "grep wrapper.java.classpath.[0-9]*= /home/edi/bin/EDI_XSLTS/wrapper.conf | tail -n 1 | cut -d '=' -f 1 | cut -d '.' -f 4"
  when: grep.rc != 0
  register: path_num

- name: add extension path into wrapper conf
  lineinfile:
    name: /home/edi/bin/EDI_XSLTS/wrapper.conf
    line: "wrapper.java.classpath.{{path_num.stdout | int + 1}}=./extensions/KNIB-Lib-XsltExtension-IAS"
    insertafter: "wrapper.java.classpath.{{path_num.stdout}}"
  when: grep.rc != 0
  register: wrapperconf

- name: restart xslt server
  shell: "/home/edi/bin/EDI_XSLTS/xslts.srv restart"
  when: jar.changed or wrapperconf.changed
